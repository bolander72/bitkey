# syntax=docker/dockerfile:1.4
FROM scratch as source
COPY --link Cargo.lock .
COPY --link Cargo.toml .
COPY --link src src

FROM scratch as vendor
COPY --link vendor vendor

FROM public.ecr.aws/docker/library/rust:alpine@sha256:4a7925c3974fab3fb68b3f4d93d1a4a36cb201f9f87b01014def219b125f1960 as toolchain
COPY --link rust-toolchain.toml .
RUN cargo version
RUN apk add --no-cache \
  musl-dev
RUN cargo install cargo-chef

FROM toolchain as planner
WORKDIR /usr/src/server
COPY --from=vendor . .
COPY --from=core . ../core
COPY --from=source . .
RUN cargo --locked chef prepare --bin wsm-enclave --recipe-path recipe.json

FROM toolchain as builder
WORKDIR /usr/src/server
COPY --from=vendor . .
COPY --from=core . ../core
COPY --from=planner /usr/src/server/recipe.json recipe.json
RUN cargo --locked chef cook --release --bin wsm-enclave --recipe-path recipe.json
COPY --from=source . .
RUN cargo --locked install --bin wsm-enclave --path src/wsm/wsm-enclave

FROM public.ecr.aws/docker/library/alpine@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b as deployable
RUN apk add --no-cache \
  gcompat \
  libgcc \
  socat
# HACK: this tar gets regenerated non-deterministically. Deleted to let SHA verification succeed for attestation.
RUN rm /lib/apk/db/scripts.tar
COPY --from=builder /usr/local/cargo/bin/wsm-enclave .
COPY --from=kmstool-enclave-cli kmstool_enclave_cli .
COPY src/wsm/wsm-enclave/start_enclave_with_proxy.sh .
CMD ["sh", "/start_enclave_with_proxy.sh"]
